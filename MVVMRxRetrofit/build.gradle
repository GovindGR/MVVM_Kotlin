plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(path: ':AppNavigator')
    implementation project(path: ':Common')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    ext.dagger2_version = '2.24'
    // Basic Dagger 2 (required)
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    // dagger.android package (optional)
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"

    def rxJava_version = "2.2.19"
    def rxAndroid_version = "2.1.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxJava_version"


    def retrofit_version = "2.6.1"
    implementation  "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation  "com.squareup.retrofit2:retrofit-converters:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-adapters:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.fragment:fragment-ktx:1.3.0-alpha03'

    def coroutine_version = "1.3.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

   /* testImplementation "org.mockito:mockito-core:2.+"
    testImplementation 'android.arch.core:core-testing:1.0.0-rc1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '2.9.0'

    testImplementation "io.mockk:mockk:1.9.3"
*/
    //Coroutine Testing ......
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'

    //Power Mock
    testImplementation "org.powermock:powermock-core:1.7.0RC2"
    testImplementation "org.powermock:powermock-module-junit4:1.7.0RC2"
    testImplementation "org.powermock:powermock-api-mockito2:1.7.0RC2"
    testImplementation group: 'org.powermock', name: 'powermock-api-easymock', version: '2.0.7'


    // Testing

    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.0.0'

}